{
  "name": "sonic-bento",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Mic } from \"lucide-react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n    wrapperClassName?: string;\r\n    audioWaveCount?: number;\r\n    bottomGradientClassName?: string;\r\n}\r\nconst SonicBento = ({wrapperClassName, audioWaveCount = 40, bottomGradientClassName}: Props) => {\r\n  return (\r\n    <div className={cn(\"relative w-full h-full overflow-hidden bg-green-500\", wrapperClassName)}>\r\n      <AudioWaves numberOfLines={audioWaveCount} />\r\n      <Circles bottomGradientClassName={bottomGradientClassName} />\r\n      <div className=\"absolute left-1/2 h-full w-[26rem] -translate-x-1/2\">\r\n        <MainLogo />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SonicBento;\r\n\r\nfunction Circles({bottomGradientClassName}: {bottomGradientClassName?: string}) {\r\n  return (\r\n    <div className=\"absolute inset-0\">\r\n      <Circle size={528} opacity=\"3%\" delay={0.45} />\r\n      <Circle size={400} opacity=\"5%\" delay={0.3} />\r\n      <Circle size={272} opacity=\"5%\" delay={0.15} />\r\n      <Circle size={144} opacity=\"10%\" delay={0} isBlurred={true} />\r\n      {/* <div className={cn(\"absolute inset-0 bg-gradient-to-t from-white to-35%\", bottomGradientClassName)} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Circle({\r\n  size,\r\n  delay,\r\n  opacity,\r\n  isBlurred = false\r\n}: {\r\n  size: number;\r\n  delay: number;\r\n  opacity: string;\r\n  isBlurred?: boolean;\r\n}) {\r\n  return (\r\n    <motion.div\r\n      variants={{\r\n        idle: { width: `${size}px`, height: `${size}px` },\r\n        active: {\r\n          width: [`${size}px`, `${size + 10}px`, `${size}px`],\r\n          height: [`${size}px`, `${size + 10}px`, `${size}px`],\r\n          transition: {\r\n            duration: 0.75,\r\n            repeat: Infinity,\r\n            repeatDelay: 1.25,\r\n            ease: \"easeInOut\",\r\n            delay,\r\n          },\r\n        },\r\n      }}\r\n      initial=\"idle\"\r\n      animate=\"active\"\r\n      style={{ \"--opacity\": opacity } as React.CSSProperties}\r\n      className={cn(\r\n        \"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-full\",\r\n        \"bg-white bg-opacity-[var(--opacity)]\",\r\n        isBlurred && \"backdrop-blur-[2px]\",\r\n         \r\n        // \"bg-[radial-gradient(circle,transparent_25%,color-mix(in_srgb,_theme(colors.green.800)_var(--opacity),transparent)_100%)]\",\r\n        \"ring-1 ring-inset ring-green-800/[8%]\"\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nfunction MainLogo() {\r\n  return (\r\n    <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 flex size-16 items-center justify-center rounded-full bg-white/20 backdrop-blur-xl\">\r\n      <Mic className=\"size-8 text-white\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AudioWaves({numberOfLines}: {numberOfLines: number}) {\r\n  const [waves, setWaves] = useState<number[]>([]);\r\n  useEffect(() => {\r\n    const waveCount = numberOfLines // Number of lines\r\n    const newWaves = [];\r\n\r\n    for (let i = 0; i < waveCount; i++) {\r\n      const randomHeight = Math.random() * 100 + 10; // Random height between 10 and 110\r\n      newWaves.push(randomHeight);\r\n    }\r\n\r\n    setWaves(newWaves);\r\n  }, [numberOfLines]);\r\n\r\n  return (\r\n    <div className=\"w-full absolute inset-0 flex justify-between items-center\">\r\n      {waves.map((height, index) => (\r\n        <motion.div\r\n        initial={{ height: \"0px\"}}\r\n        animate={{ height: [height, height + 10, height] }}\r\n        transition={{ duration: 0.75, repeat: Infinity, repeatDelay: 1.25, ease: \"easeInOut\", delay: index * 0.05 }}\r\n          key={index}\r\n          className=\"w-[3px] bg-white/50\"\r\n          style={{ height: `${height}px` }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n",
      "path": "block/bento-grid-components/sonic-bento.tsx",
      "target": "components/block/bento-grid-components/sonic-bento.tsx"
    }
  ]
}